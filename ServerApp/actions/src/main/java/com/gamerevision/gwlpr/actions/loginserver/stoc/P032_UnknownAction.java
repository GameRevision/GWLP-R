/**
 * For copyright information see the LICENSE document.
 */

/**
 * Auto-generated by PacketCodeGen, on 2012-05-28
 */

package com.gamerevision.gwlpr.actions.loginserver.stoc;

import com.realityshard.shardlet.GenericAction;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.List;

/**
 * This is an automatically generated ShardletAction.
 * It resembles the packet template that has been 
 * parsed from our packet templates xml.
 *
 * Auto generated 
 *
 * @author GWLPR Template Updater
 */
public final class P032_UnknownAction extends GenericAction
{

    private int unknown1;
    private short unknown2;
    private byte unknown3;
    private byte unknown4;
    private List<Short> unknown5;


    public short getHeader()
    {
        return 32;
    }


    public void setUnknown1(int newValue)
    {
        unknown1 = newValue;
    }


    public void setUnknown2(short newValue)
    {
        unknown2 = newValue;
    }


    public void setUnknown3(byte newValue)
    {
        unknown3 = newValue;
    }


    public void setUnknown4(byte newValue)
    {
        unknown4 = newValue;
    }


    public void setUnknown5(List<Short> newValue)
    {
        unknown5 = newValue;
    }


    private int getSize()
    {
        int size = 12;

        if (unknown5 == null)
        {
            return 0;
        }
        
        size += 2 * unknown5.size();

        return size;
    }


    @Override
    public boolean serialize()
    {
        int size = getSize();

        if (size == 0)
        {
            return false;
        }

        ByteBuffer buffer = ByteBuffer.allocate(size).order(ByteOrder.LITTLE_ENDIAN);

        try
        {
            buffer.putShort(getHeader());

            buffer.putInt(unknown1);
            buffer.putShort(unknown2);
            buffer.put(unknown3);
            buffer.put(unknown4);
            short prefix_unknown5 = (short) unknown5.size();
            buffer.putShort(prefix_unknown5);
            
            for (int i = 0; i < prefix_unknown5; i++)
            {
                buffer.putShort(unknown5.get(i));
            }
        }
        catch (BufferOverflowException e)
        {
            return false;
        }

        setBuffer(buffer);

        return true;
    }
}