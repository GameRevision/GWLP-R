/**
 * For copyright information see the LICENSE document.
 */

/**
 * Auto-generated by PacketCodeGen, on 2012-09-28
 */

package com.gamerevision.gwlpr.actions.gameserver.stoc;

import com.realityshard.shardlet.utils.GenericAction;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * This is an automatically generated ShardletAction.
 * It resembles the packet template that has been 
 * parsed from our packet templates xml.
 *
 * Auto generated 
 *
 * @author GWLPR Template Updater
 */
public final class P021_UnknownAction extends GenericAction
{

    private int unknown1;
    private int unknown2;
    private byte unknown3;
    private byte unknown4;
    private float[] unknown5;
    private short unknown6;
    private float[] unknown7;
    private byte unknown8;
    private float unknown9;
    private float unknown10;
    private int unknown11;
    private int unknown12;
    private int unknown13;
    private int unknown14;
    private int unknown15;
    private int unknown16;
    private int unknown17;
    private float[] unknown18;
    private float[] unknown19;
    private short unknown20;
    private int unknown21;
    private float[] unknown22;
    private short unknown23;


    public short getHeader()
    {
        return 21;
    }


    public void setUnknown1(int newValue)
    {
        unknown1 = newValue;
    }


    public void setUnknown2(int newValue)
    {
        unknown2 = newValue;
    }


    public void setUnknown3(byte newValue)
    {
        unknown3 = newValue;
    }


    public void setUnknown4(byte newValue)
    {
        unknown4 = newValue;
    }


    public void setUnknown5(float[] newValue)
    {
        unknown5 = newValue;
    }


    public void setUnknown6(short newValue)
    {
        unknown6 = newValue;
    }


    public void setUnknown7(float[] newValue)
    {
        unknown7 = newValue;
    }


    public void setUnknown8(byte newValue)
    {
        unknown8 = newValue;
    }


    public void setUnknown9(float newValue)
    {
        unknown9 = newValue;
    }


    public void setUnknown10(float newValue)
    {
        unknown10 = newValue;
    }


    public void setUnknown11(int newValue)
    {
        unknown11 = newValue;
    }


    public void setUnknown12(int newValue)
    {
        unknown12 = newValue;
    }


    public void setUnknown13(int newValue)
    {
        unknown13 = newValue;
    }


    public void setUnknown14(int newValue)
    {
        unknown14 = newValue;
    }


    public void setUnknown15(int newValue)
    {
        unknown15 = newValue;
    }


    public void setUnknown16(int newValue)
    {
        unknown16 = newValue;
    }


    public void setUnknown17(int newValue)
    {
        unknown17 = newValue;
    }


    public void setUnknown18(float[] newValue)
    {
        unknown18 = newValue;
    }


    public void setUnknown19(float[] newValue)
    {
        unknown19 = newValue;
    }


    public void setUnknown20(short newValue)
    {
        unknown20 = newValue;
    }


    public void setUnknown21(int newValue)
    {
        unknown21 = newValue;
    }


    public void setUnknown22(float[] newValue)
    {
        unknown22 = newValue;
    }


    public void setUnknown23(short newValue)
    {
        unknown23 = newValue;
    }


    private int getSize()
    {
        int size = 99;

        if (unknown5 == null)
        {
            return 0;
        }
        
        if (unknown5.length != 2)
        {
            return 0;
        }
        if (unknown7 == null)
        {
            return 0;
        }
        
        if (unknown7.length != 2)
        {
            return 0;
        }
        if (unknown18 == null)
        {
            return 0;
        }
        
        if (unknown18.length != 2)
        {
            return 0;
        }
        if (unknown19 == null)
        {
            return 0;
        }
        
        if (unknown19.length != 2)
        {
            return 0;
        }
        if (unknown22 == null)
        {
            return 0;
        }
        
        if (unknown22.length != 2)
        {
            return 0;
        }

        return size;
    }


    @Override
    public boolean serialize()
    {
        int size = getSize();

        if (size == 0)
        {
            return false;
        }

        ByteBuffer buffer = ByteBuffer.allocate(size).order(ByteOrder.LITTLE_ENDIAN);

        try
        {
            buffer.putShort(getHeader());

            buffer.putInt(unknown1);
            buffer.putInt(unknown2);
            buffer.put(unknown3);
            buffer.put(unknown4);
            buffer.putFloat(unknown5[0]);
            buffer.putFloat(unknown5[1]);
            buffer.putShort(unknown6);
            buffer.putFloat(unknown7[0]);
            buffer.putFloat(unknown7[1]);
            buffer.put(unknown8);
            buffer.putFloat(unknown9);
            buffer.putFloat(unknown10);
            buffer.putInt(unknown11);
            buffer.putInt(unknown12);
            buffer.putInt(unknown13);
            buffer.putInt(unknown14);
            buffer.putInt(unknown15);
            buffer.putInt(unknown16);
            buffer.putInt(unknown17);
            buffer.putFloat(unknown18[0]);
            buffer.putFloat(unknown18[1]);
            buffer.putFloat(unknown19[0]);
            buffer.putFloat(unknown19[1]);
            buffer.putShort(unknown20);
            buffer.putInt(unknown21);
            buffer.putFloat(unknown22[0]);
            buffer.putFloat(unknown22[1]);
            buffer.putShort(unknown23);
        }
        catch (BufferOverflowException e)
        {
            return false;
        }

        setBuffer(buffer);

        return true;
    }
}