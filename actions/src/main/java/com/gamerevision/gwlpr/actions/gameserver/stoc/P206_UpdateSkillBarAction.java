/**
 * For copyright information see the LICENSE document.
 */

/**
 * Auto-generated by PacketCodeGen, on 2012-07-19
 */

package com.gamerevision.gwlpr.actions.gameserver.stoc;

import com.realityshard.shardlet.GenericAction;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * This is an automatically generated ShardletAction.
 * It resembles the packet template that has been 
 * parsed from our packet templates xml.
 *
 *
 * @author GWLPR Template Updater
 */
public final class P206_UpdateSkillBarAction extends GenericAction
{

    private int agentID;
    private int[] skillBar;
    private int[] skillBarPvPMask;
    private byte data3;


    public short getHeader()
    {
        return 206;
    }


    public void setAgentID(int newValue)
    {
        agentID = newValue;
    }


    public void setSkillBar(int[] newValue)
    {
        skillBar = newValue;
    }


    public void setSkillBarPvPMask(int[] newValue)
    {
        skillBarPvPMask = newValue;
    }


    public void setData3(byte newValue)
    {
        data3 = newValue;
    }


    private int getSize()
    {
        int size = 11;

        if (skillBar != null)
        {
            size += 4 * skillBar.length;
        }
        if (skillBarPvPMask != null)
        {
            size += 4 * skillBarPvPMask.length;
        }

        return size;
    }


    @Override
    public boolean serialize()
    {
        int size = getSize();

        if (size == 0)
        {
            return false;
        }

        ByteBuffer buffer = ByteBuffer.allocate(size).order(ByteOrder.LITTLE_ENDIAN);

        try
        {
            buffer.putShort(getHeader());

            buffer.putInt(agentID);
            short prefix_skillBar;
            if (skillBar == null)
            {
                prefix_skillBar = 0;
            }
            else
            {
                prefix_skillBar = (short) skillBar.length;
            }
            buffer.putShort(prefix_skillBar);
            
            for (int i = 0; i < prefix_skillBar; i++)
            {
                buffer.putInt(skillBar[i]);
            }
            short prefix_skillBarPvPMask;
            if (skillBarPvPMask == null)
            {
                prefix_skillBarPvPMask = 0;
            }
            else
            {
                prefix_skillBarPvPMask = (short) skillBarPvPMask.length;
            }
            buffer.putShort(prefix_skillBarPvPMask);
            
            for (int i = 0; i < prefix_skillBarPvPMask; i++)
            {
                buffer.putInt(skillBarPvPMask[i]);
            }
            buffer.put(data3);
        }
        catch (BufferOverflowException e)
        {
            return false;
        }

        setBuffer(buffer);

        return true;
    }
}