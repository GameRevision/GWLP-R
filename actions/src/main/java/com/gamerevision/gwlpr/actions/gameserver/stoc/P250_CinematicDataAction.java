/**
 * For copyright information see the LICENSE document.
 */

/**
 * Auto-generated by PacketCodeGen, on 2012-09-28
 */

package com.gamerevision.gwlpr.actions.gameserver.stoc;

import com.realityshard.shardlet.utils.GenericAction;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * This is an automatically generated ShardletAction.
 * It resembles the packet template that has been 
 * parsed from our packet templates xml.
 *
 *
 * @author GWLPR Template Updater
 */
public final class P250_CinematicDataAction extends GenericAction
{

    private byte[] data;


    public short getHeader()
    {
        return 250;
    }


    public void setData(byte[] newValue)
    {
        data = newValue;
    }


    private int getSize()
    {
        int size = 4;

        if (data != null)
        {
            size += 1 * data.length;
        }

        return size;
    }


    @Override
    public boolean serialize()
    {
        int size = getSize();

        if (size == 0)
        {
            return false;
        }

        ByteBuffer buffer = ByteBuffer.allocate(size).order(ByteOrder.LITTLE_ENDIAN);

        try
        {
            buffer.putShort(getHeader());

            short prefix_data;
            if (data == null)
            {
                prefix_data = 0;
            }
            else
            {
                prefix_data = (short) data.length;
            }
            buffer.putShort(prefix_data);
            
            for (int i = 0; i < prefix_data; i++)
            {
                buffer.put(data[i]);
            }
        }
        catch (BufferOverflowException e)
        {
            return false;
        }

        setBuffer(buffer);

        return true;
    }
}