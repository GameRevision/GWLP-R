/**
 * For copyright information see the LICENSE document.
 */

/**
 * Auto-generated by PacketCodeGen, on 2012-09-28
 */

package com.gamerevision.gwlpr.actions.loginserver.ctos;

import com.realityshard.shardlet.EventAggregator;
import com.realityshard.shardlet.utils.GenericTriggerableAction;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;

/**
 * This is an automatically generated ShardletAction.
 * It resembles the packet template that has been 
 * parsed from our packet templates xml.
 *
 * Auto generated 
 *
 * @author GWLPR Template Updater
 */
public final class P044_UnknownAction extends GenericTriggerableAction
{

    private int unknown1;
    private int unknown2;
    private int unknown3;
    private int unknown4;
    private int unknown5;
    private int unknown6;
    private char[] unknown7;
    private char[] unknown8;
    private char[] unknown9;
    private char[] unknown10;
    private char[] unknown11;
    private char[] unknown12;
    private char[] unknown13;
    private char[] unknown14;
    private char[] unknown15;
    private char[] unknown16;
    private char[] unknown17;
    private char[] unknown18;
    private char[] unknown19;
    private char[] unknown20;
    private int[] unknown21;
    private int[] unknown22;


    public short getHeader()
    {
        return 44;
    }


    public int getUnknown1()
    {
        return unknown1;
    }


    public int getUnknown2()
    {
        return unknown2;
    }


    public int getUnknown3()
    {
        return unknown3;
    }


    public int getUnknown4()
    {
        return unknown4;
    }


    public int getUnknown5()
    {
        return unknown5;
    }


    public int getUnknown6()
    {
        return unknown6;
    }


    public char[] getUnknown7()
    {
        return unknown7;
    }


    public char[] getUnknown8()
    {
        return unknown8;
    }


    public char[] getUnknown9()
    {
        return unknown9;
    }


    public char[] getUnknown10()
    {
        return unknown10;
    }


    public char[] getUnknown11()
    {
        return unknown11;
    }


    public char[] getUnknown12()
    {
        return unknown12;
    }


    public char[] getUnknown13()
    {
        return unknown13;
    }


    public char[] getUnknown14()
    {
        return unknown14;
    }


    public char[] getUnknown15()
    {
        return unknown15;
    }


    public char[] getUnknown16()
    {
        return unknown16;
    }


    public char[] getUnknown17()
    {
        return unknown17;
    }


    public char[] getUnknown18()
    {
        return unknown18;
    }


    public char[] getUnknown19()
    {
        return unknown19;
    }


    public char[] getUnknown20()
    {
        return unknown20;
    }


    public int[] getUnknown21()
    {
        return unknown21;
    }


    public int[] getUnknown22()
    {
        return unknown22;
    }


    @Override
    public boolean deserialize()
    {
        ByteBuffer buffer = getBuffer();
        int bufferPosition = buffer.position();

        try
        {
            unknown1 = buffer.getInt();
            unknown2 = buffer.getInt();
            unknown3 = buffer.getInt();
            unknown4 = buffer.getInt();
            unknown5 = buffer.getInt();
            unknown6 = buffer.getInt();
            short prefix_unknown7 = buffer.getShort();
            unknown7 = new char[prefix_unknown7];
            
            for (int i = 0; i < prefix_unknown7; i++)
            {
                unknown7[i] = buffer.getChar();
            }
            short prefix_unknown8 = buffer.getShort();
            unknown8 = new char[prefix_unknown8];
            
            for (int i = 0; i < prefix_unknown8; i++)
            {
                unknown8[i] = buffer.getChar();
            }
            short prefix_unknown9 = buffer.getShort();
            unknown9 = new char[prefix_unknown9];
            
            for (int i = 0; i < prefix_unknown9; i++)
            {
                unknown9[i] = buffer.getChar();
            }
            short prefix_unknown10 = buffer.getShort();
            unknown10 = new char[prefix_unknown10];
            
            for (int i = 0; i < prefix_unknown10; i++)
            {
                unknown10[i] = buffer.getChar();
            }
            short prefix_unknown11 = buffer.getShort();
            unknown11 = new char[prefix_unknown11];
            
            for (int i = 0; i < prefix_unknown11; i++)
            {
                unknown11[i] = buffer.getChar();
            }
            short prefix_unknown12 = buffer.getShort();
            unknown12 = new char[prefix_unknown12];
            
            for (int i = 0; i < prefix_unknown12; i++)
            {
                unknown12[i] = buffer.getChar();
            }
            short prefix_unknown13 = buffer.getShort();
            unknown13 = new char[prefix_unknown13];
            
            for (int i = 0; i < prefix_unknown13; i++)
            {
                unknown13[i] = buffer.getChar();
            }
            short prefix_unknown14 = buffer.getShort();
            unknown14 = new char[prefix_unknown14];
            
            for (int i = 0; i < prefix_unknown14; i++)
            {
                unknown14[i] = buffer.getChar();
            }
            short prefix_unknown15 = buffer.getShort();
            unknown15 = new char[prefix_unknown15];
            
            for (int i = 0; i < prefix_unknown15; i++)
            {
                unknown15[i] = buffer.getChar();
            }
            short prefix_unknown16 = buffer.getShort();
            unknown16 = new char[prefix_unknown16];
            
            for (int i = 0; i < prefix_unknown16; i++)
            {
                unknown16[i] = buffer.getChar();
            }
            short prefix_unknown17 = buffer.getShort();
            unknown17 = new char[prefix_unknown17];
            
            for (int i = 0; i < prefix_unknown17; i++)
            {
                unknown17[i] = buffer.getChar();
            }
            short prefix_unknown18 = buffer.getShort();
            unknown18 = new char[prefix_unknown18];
            
            for (int i = 0; i < prefix_unknown18; i++)
            {
                unknown18[i] = buffer.getChar();
            }
            short prefix_unknown19 = buffer.getShort();
            unknown19 = new char[prefix_unknown19];
            
            for (int i = 0; i < prefix_unknown19; i++)
            {
                unknown19[i] = buffer.getChar();
            }
            short prefix_unknown20 = buffer.getShort();
            unknown20 = new char[prefix_unknown20];
            
            for (int i = 0; i < prefix_unknown20; i++)
            {
                unknown20[i] = buffer.getChar();
            }
            short prefix_unknown21 = buffer.getShort();
            unknown21 = new int[prefix_unknown21];
            
            for (int i = 0; i < prefix_unknown21; i++)
            {
                unknown21[i] = buffer.getInt();
            }
            short prefix_unknown22 = buffer.getShort();
            unknown22 = new int[prefix_unknown22];
            
            for (int i = 0; i < prefix_unknown22; i++)
            {
                unknown22[i] = buffer.getInt();
            }
        }
        catch (BufferUnderflowException e)
        {
            buffer.position(bufferPosition);
            return false;
        }

        return true;
    }


    @Override
    public void triggerEvent(EventAggregator aggregator)
    {
        aggregator.triggerEvent(this);
    }
}