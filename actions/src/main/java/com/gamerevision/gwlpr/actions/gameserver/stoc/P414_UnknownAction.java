/**
 * For copyright information see the LICENSE document.
 */

/**
 * Auto-generated by PacketCodeGen, on 2012-07-19
 */

package com.gamerevision.gwlpr.actions.gameserver.stoc;

import com.realityshard.shardlet.GenericAction;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * This is an automatically generated ShardletAction.
 * It resembles the packet template that has been 
 * parsed from our packet templates xml.
 *
 * Auto generated 
 *
 * @author GWLPR Template Updater
 */
public final class P414_UnknownAction extends GenericAction
{

    private short unknown1;
    private int unknown2;
    private byte unknown3;
    private byte unknown4;
    private byte unknown5;
    private char[] unknown6;


    public short getHeader()
    {
        return 414;
    }


    public void setUnknown1(short newValue)
    {
        unknown1 = newValue;
    }


    public void setUnknown2(int newValue)
    {
        unknown2 = newValue;
    }


    public void setUnknown3(byte newValue)
    {
        unknown3 = newValue;
    }


    public void setUnknown4(byte newValue)
    {
        unknown4 = newValue;
    }


    public void setUnknown5(byte newValue)
    {
        unknown5 = newValue;
    }


    public void setUnknown6(char[] newValue)
    {
        unknown6 = newValue;
    }


    private int getSize()
    {
        int size = 13;

        if (unknown6 != null)
        {
            size += 2 * unknown6.length;
        }

        return size;
    }


    @Override
    public boolean serialize()
    {
        int size = getSize();

        if (size == 0)
        {
            return false;
        }

        ByteBuffer buffer = ByteBuffer.allocate(size).order(ByteOrder.LITTLE_ENDIAN);

        try
        {
            buffer.putShort(getHeader());

            buffer.putShort(unknown1);
            buffer.putInt(unknown2);
            buffer.put(unknown3);
            buffer.put(unknown4);
            buffer.put(unknown5);
            short prefix_unknown6;
            if (unknown6 == null)
            {
                prefix_unknown6 = 0;
            }
            else
            {
                prefix_unknown6 = (short) unknown6.length;
            }
            buffer.putShort(prefix_unknown6);
            
            for (int i = 0; i < prefix_unknown6; i++)
            {
                buffer.putChar(unknown6[i]);
            }
        }
        catch (BufferOverflowException e)
        {
            return false;
        }

        setBuffer(buffer);

        return true;
    }
}