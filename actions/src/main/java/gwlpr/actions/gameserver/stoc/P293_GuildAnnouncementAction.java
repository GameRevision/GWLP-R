/**
 * For copyright information see the LICENSE document.
 */

/**
 * Auto-generated by PacketCodeGen, on 2012-09-28
 */

package gwlpr.actions.gameserver.stoc;

import realityshard.shardlet.utils.GenericAction;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * This is an automatically generated ShardletAction.
 * It resembles the packet template that has been 
 * parsed from our packet templates xml.
 *
 *
 * @author GWLPR Template Updater
 */
public final class P293_GuildAnnouncementAction extends GenericAction
{

    private char[] announcement;
    private char[] characterName;


    public short getHeader()
    {
        return 293;
    }


    public void setAnnouncement(char[] newValue)
    {
        announcement = newValue;
    }


    public void setCharacterName(char[] newValue)
    {
        characterName = newValue;
    }


    private int getSize()
    {
        int size = 6;

        if (announcement != null)
        {
            size += 2 * announcement.length;
        }
        if (characterName != null)
        {
            size += 2 * characterName.length;
        }

        return size;
    }


    @Override
    public boolean serialize()
    {
        int size = getSize();

        if (size == 0)
        {
            return false;
        }

        ByteBuffer buffer = ByteBuffer.allocate(size).order(ByteOrder.LITTLE_ENDIAN);

        try
        {
            buffer.putShort(getHeader());

            short prefix_announcement;
            if (announcement == null)
            {
                prefix_announcement = 0;
            }
            else
            {
                prefix_announcement = (short) announcement.length;
            }
            buffer.putShort(prefix_announcement);
            
            for (int i = 0; i < prefix_announcement; i++)
            {
                buffer.putChar(announcement[i]);
            }
            short prefix_characterName;
            if (characterName == null)
            {
                prefix_characterName = 0;
            }
            else
            {
                prefix_characterName = (short) characterName.length;
            }
            buffer.putShort(prefix_characterName);
            
            for (int i = 0; i < prefix_characterName; i++)
            {
                buffer.putChar(characterName[i]);
            }
        }
        catch (BufferOverflowException e)
        {
            return false;
        }

        setBuffer(buffer);

        return true;
    }
}