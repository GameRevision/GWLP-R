/**
 * For copyright information see the LICENSE document.
 */

package gwlpr.protocol.handshake.messages;

import static gwlpr.protocol.serialization.GWMessageSerializationRegistry.register;
import static gwlpr.protocol.serialization.GWMessageSerializationRegistry.getFilter;
import gwlpr.protocol.serialization.GWMessage;
import gwlpr.protocol.serialization.NettySerializationFilter;
import io.netty.buffer.ByteBuf;


/**
 * Generated by hand :P
 *
 * STEP 1:
 * LOGIN SERVER ONLY!
 *
 * Special message: Includes header and length in the first two bytes.
 *
 * @author _rusty
 */
public class P000_ClientVersion
{

    public static class Header extends GWMessage
    {
        public short Header;
        public short Length;
        public int PayloadLength;

        @Override
        public short getHeader() { return 0; }
        public static int getLength() { return 4; }
    }


    public static class Payload extends GWMessage
    {
        public long ClientVersion;
        public long Unknown2;
        public long Unknown3;

        @Override
        public short getHeader() { return 0; }
        public static int getLength() { return 12; }
    }


    private static final NettySerializationFilter headFilter;
    private static final NettySerializationFilter payloadFilter;


    static
    {
        register(Header.class);
        register(Payload.class);

        headFilter = getFilter(Header.class);
        payloadFilter = getFilter(Payload.class);
    }


    public static int getLength()
    {
        return Header.getLength() + Payload.getLength();
    }


    public static boolean check(Header header)
    {
        return (header.Header == 0 && header.Length == Header.getLength() && header.PayloadLength == Payload.getLength());
    }


    public static Header serializeHeader(ByteBuf buffer)
    {
        // failcheck
        if (buffer.readableBytes() < Header.getLength()) { return null; }

        Header result = new Header();
        headFilter.deserialize(buffer, result);

        return result;
    }


    public static Payload serializePayload(ByteBuf buffer)
    {
        // failcheck
        if (buffer.readableBytes() < Payload.getLength()) { return null; }

        Payload result = new Payload();
        payloadFilter.deserialize(buffer, result);

        return result;
    }
}
