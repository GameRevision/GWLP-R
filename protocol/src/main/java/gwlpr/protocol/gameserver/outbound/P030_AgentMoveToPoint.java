
package gwlpr.protocol.gameserver.outbound;

import gwlpr.protocol.serialization.GWMessage;
import gwlpr.protocol.util.Vector2;


/**
 * Auto-generated by PacketCodeGen.
 * 
 */
public final class P030_AgentMoveToPoint
    extends GWMessage
{

    private long agentID;
    /**
     * 
     * Absolute point in the GW coord system
     * 
     */
    private Vector2 moveAim;
    /**
     * 
     * The plane that the agent is on
     * 
     */
    private int currentPlane;
    /**
     * 
     * The plane that will be next. Might be the plane
     * that the MoveAim is in. 0 if player stays in the
     * same plane.
     * 
     */
    private int nextPlane;

    @Override
    public short getHeader() {
        return  30;
    }

    public void setAgentID(long agentID) {
        this.agentID = agentID;
    }

    public void setMoveAim(Vector2 moveAim) {
        this.moveAim = moveAim;
    }

    public void setCurrentPlane(int currentPlane) {
        this.currentPlane = currentPlane;
    }

    public void setNextPlane(int nextPlane) {
        this.nextPlane = nextPlane;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("P030_AgentMoveToPoint[");
        sb.append("agentID=").append(this.agentID).append(",moveAim=").append(this.moveAim.toString()).append(",currentPlane=").append(this.currentPlane).append(",nextPlane=").append(this.nextPlane).append("]");
        return sb.toString();
    }

}
